const fs = require("fs");
const globby = require("globby");

const jaja = async () => {
 //console.log("dnnasdo");
  const res = await fetch("http://localhost/duunihakuri2.0-api/api/getsp.php");
  const data = await res.json();

  const paths = data.map((ninja) => {
    route = ninja.id.toString();
    return `<url><loc>https://duunihakuri.fi/ilmoitus/${`${route}`}</loc><lastmod>${new Date().toISOString()}</lastmod><changefreq>monthly</changefreq><priority>0.9</priority></url>`;
  });

  const pages = await globby([
    "pages/**/*{.js,.mdx}",
    "!pages/_*.js",
    "!pages/api",
  ]);
  const sitemap = `<?xml version="1.0" encoding="UTF-8"?>
    <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    ${pages.map(addPage).join("\n")}

  ${paths.map((item, i) => item)}
  </urlset>`;
  fs.writeFileSync("public/sitemap.xml", sitemap);
};

function addPage(page) {
 //console.log(page);
  const path = page.replace("pages", "").replace(".js", "").replace(".mdx", "");
  ////console.log(path)
  const route = path === "/index" ? "" : path;
  return `  <url>
    <loc>https://duunihakuri.fi${`${route}`}</loc>
    <lastmod>${new Date().toISOString()}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>1.0</priority>
  </url>`;
}

async function generateSitemap() {
  // excludes Nextjs files and API routes.

  const pages = await globby([
    "pages/**/*{.js,.mdx}",
    "!pages/_*.js",
    "!pages/api",
  ]);
  const sitemap = `<?xml version="1.0" encoding="UTF-8"?>
    <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  ${pages.map(addPage).join("\n")}
  </urlset>`;
  fs.writeFileSync("public/sitemap.xml", sitemap);
}
// generateSitemap();
jaja();
